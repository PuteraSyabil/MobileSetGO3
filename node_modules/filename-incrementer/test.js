const incr = require('../filename-incrementer');
const path = '../_phonegap-build-zips/tijaramaroc/tijaramaroc/';
const filePattern = '0.0.5-pqa-###.zip';
const filePatternAlt = filePattern.replace('###', '@@');

incr.getFiles(path + filePattern)
	.then(
		result => console.log('incr.getFiles(' + path + filePattern + ')', result),
		error => console.error('incr.get(' + path + filePattern + ')', error));
incr.getFiles(path + filePatternAlt, '@@')
	.then(
		result => console.log('incr.getFiles(' + path + filePatternAlt + ', \'@@\')', result),
		error => console.error('incr.get(' + path + filePatternAlt + ')', error));
incr.getFilesMap(path + filePattern)
	.then(
		result => console.log('incr.getFilesMap(' + path + filePattern + ')', result),
		error => console.error('incr.get(' + path + filePattern + ')', error));
incr.getMax(path + filePattern)
	.then(
		result => console.log('incr.getMax(' + path + filePattern + ')', result),
		error => console.error('incr.getMax(' + path + filePattern + ')', error));
incr.getMin(path + filePattern)
	.then(
		result => console.log('incr.getMin(' + path + filePattern + ')', result),
		error => console.error('incr.getMin(' + path + filePattern + ')', error));
incr.getNew(path + filePattern)
	.then(
		result => console.log('incr.getNew(' + path + filePattern + ')', result),
		error => console.error('incr.getNew(' + path + filePattern + ')', error));
incr.getNewName(path + filePattern)
	.then(
		result => console.log('incr.getNewName(' + path + filePattern + ')', result),
		error => console.error('incr.getNewName(' + path + filePattern + ')', error));
incr.getNewName(path + filePatternAlt, '@@')
	.then(
		result => console.log('incr.getNewName(' + path + filePatternAlt + ', \'@@\')', result),
		error => console.error('incr.getNewName(' + path + filePatternAlt + ', \'@@\')', error));
Promise.resolve(incr.getMatchPattern('glob', path + filePattern))
	.then(
		result => console.log('incr.getMatchPattern(glob, ' + path + filePattern + ')', result),
		error => console.error('incr.getMatchPattern(glob, ' + path + filePattern + ')', error));
Promise.resolve(incr.getMatchPattern('regexp', path + filePattern))
	.then(
		result => console.log('incr.getMatchPattern(regexp, ' + path + filePattern + ')', result),
		error => console.error('incr.getMatchPattern(regexp, ' + path + filePattern + ')', error));
Promise.resolve(incr.getMatchPattern('glob', path + filePatternAlt, '@@'))
	.then(
		result => console.log('incr.getMatchPattern(\'glob\', ' + path + filePatternAlt + ', \'@@\')', result),
		error => console.error('incr.getMatchPattern(\'glob\', ' + path + filePatternAlt + ', \'@@\')', error));
Promise.resolve(incr.getMatchPattern('regexp', path + filePattern.replace('###', '@@'), '@@'))
	.then(
		result => console.log('incr.getMatchPattern(\'regexp\', ' + path + filePatternAlt + ', \'@@\')', result),
		error => console.error('incr.getMatchPattern(\'regexp\', ' + path + filePatternAlt + ', \'@@\')', error));



Promise.resolve(incr.getMatchPattern('glob', 'directory/file-###.ext'))
	.then(
		result => console.log('incr.getMatchPattern(glob, ' + path + filePattern + ')', result),
		error => console.error('incr.getMatchPattern(glob, ' + path + filePattern + ')', error));
Promise.resolve(incr.getMatchPattern('regexp', 'directory/test-@@.ext', '@@'))
	.then(
		result => console.log('incr.getMatchPattern(\'regexp\', ' + path + filePatternAlt + ', \'@@\')', result),
		error => console.error('incr.getMatchPattern(\'regexp\', ' + path + filePatternAlt + ', \'@@\')', error));